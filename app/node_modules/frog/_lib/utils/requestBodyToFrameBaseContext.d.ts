import type { Context as Context_hono, Input } from 'hono';
import type { FrogConstructorParameters } from '../frog-base.js';
import type { FrameBaseContext } from '../types/context.js';
import type { Env } from '../types/env.js';
import type { Hub } from '../types/hub.js';
type RequestBodyToFrameBaseContextOptions = {
    hub?: Hub | undefined;
    secret?: FrogConstructorParameters['secret'];
    verify?: FrogConstructorParameters['verify'];
    verifyOrigin?: FrogConstructorParameters['verifyOrigin'];
};
type RequestBodyToFrameBaseContextReturnType<env extends Env = Env, path extends string = string, input extends Input = {}, _state = env['State']> = FrameBaseContext<env, path, input, _state>;
export declare function requestBodyToFrameBaseContext<env extends Env, path extends string, input extends Input, _state = env['State']>(c: Context_hono<env, path>, { hub, secret, verify, verifyOrigin, }: RequestBodyToFrameBaseContextOptions): Promise<RequestBodyToFrameBaseContextReturnType<env, path, input, _state>>;
export {};
//# sourceMappingURL=requestBodyToFrameBaseContext.d.ts.map