export function getCastActionContext(parameters) {
    const { context } = parameters;
    const { env, actionData, req, verified } = context || {};
    if (!actionData)
        throw new Error('Action data must be present for action handlers.');
    return {
        context: {
            actionData: {
                buttonIndex: 1,
                castId: actionData.castId,
                fid: actionData.fid,
                network: actionData.network,
                messageHash: actionData.messageHash,
                timestamp: actionData.timestamp,
                url: actionData.url,
            },
            env,
            error: (data) => ({
                error: data,
                format: 'castAction',
                status: 'error',
            }),
            frame: (data) => ({
                data: { path: data.path, type: 'frame' },
                format: 'castAction',
                status: 'success',
            }),
            message: (data) => ({
                data: { message: data.message, type: 'message' },
                format: 'castAction',
                status: 'success',
            }),
            req,
            res: (data) => ({
                data,
                format: 'castAction',
                status: 'success',
            }),
            var: context.var,
            verified,
        },
    };
}
//# sourceMappingURL=getCastActionContext.js.map