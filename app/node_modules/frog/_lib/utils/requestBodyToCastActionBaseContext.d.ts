import type { Context as Context_hono, Input } from 'hono';
import type { FrogConstructorParameters } from '../frog-base.js';
import type { CastActionBaseContext } from '../types/context.js';
import type { Env } from '../types/env.js';
import type { Hub } from '../types/hub.js';
type RequestBodyToCastActionBaseContextOptions = {
    hub?: Hub | undefined;
    verify?: FrogConstructorParameters['verify'];
    verifyOrigin?: FrogConstructorParameters['verifyOrigin'];
};
type RequestBodyToCastActionBaseContextReturnType<env extends Env = Env, path extends string = string, input extends Input = {}, _state = env['State']> = CastActionBaseContext<env, path, input>;
export declare function requestBodyToCastActionBaseContext<env extends Env, path extends string, input extends Input>(c: Context_hono<env, path>, { hub, verify, verifyOrigin, }: RequestBodyToCastActionBaseContextOptions): Promise<RequestBodyToCastActionBaseContextReturnType<env, path, input>>;
export {};
//# sourceMappingURL=requestBodyToCastActionBaseContext.d.ts.map