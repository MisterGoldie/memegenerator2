import { hexToBytes } from 'viem';
import { Message } from '../protobufs/generated/message_pb.js';
export async function verifyMessage({ frameUrl, hub, trustedData, url, verifyOrigin = true, }) {
    const body = hexToBytes(`0x${trustedData.messageBytes}`);
    const response = hub.verifyMessage
        ? await hub.verifyMessage({ trustedData })
        : await fetch(`${hub.apiUrl}/v1/validateMessage`, {
            ...hub.fetchOptions,
            method: 'POST',
            headers: {
                'Content-Type': 'application/octet-stream',
                ...hub.fetchOptions?.headers,
            },
            body,
        }).then((res) => res.json());
    if (!response.valid)
        throw new Error(`message is invalid. ${response.details || response.message}`);
    if (verifyOrigin && new URL(url).origin !== new URL(frameUrl).origin)
        throw new Error(`Invalid frame url: ${frameUrl}. Expected: ${url}.`);
    const message = Message.fromBinary(body);
    return { message };
}
//# sourceMappingURL=verifyMessage.js.map